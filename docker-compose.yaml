x-restart-policy: &restart_policy
  restart: unless-stopped
x-healthcheck-defaults: &healthcheck_defaults
  interval: 5s
  timeout: 5s
  retries: 10
  start_period: 30s
x-app-defaults: &app_defaults
  <<: *restart_policy
  stop_grace_period: "5s"
  volumes:
    - ./data:/app/data
  depends_on:
    - db
  env_file:
    - .env
services:
  app:
    <<: *app_defaults
    # build: .
    image: bubaley/telegram-authorization:latest
    command: make prod-gunicorn
    ports:
      - "${ENTRY_PORT:-15000}:8000"
    healthcheck:
      <<: *healthcheck_defaults
      test:
        [
          "CMD-SHELL",
          "python -c 'import urllib.request as u, sys; u.urlopen(sys.argv[1])' http://localhost:8000/health",
        ]
  db:
    <<: *restart_policy
    # ports:
    #   - "${ENTRY_DB_PORT:-5432}:5432"
    image: postgres:17.5-alpine3.21
    shm_size: 256m
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${SQL_DATABASE:-postgres}
      POSTGRES_USER: ${SQL_USER:-postgres}
      POSTGRES_PASSWORD: ${SQL_PASSWORD:-postgres}
    healthcheck:
      <<: *healthcheck_defaults
      test: [ "CMD-SHELL", "pg_isready -U ${SQL_USER:-postgres} -d ${SQL_DATABASE:-postgres}" ]
    command: >
      postgres
      -c max_connections=${SQL_MAX_CONNECTIONS:-100}
      -c shared_buffers=${SQL_SHARED_BUFFERS:-128MB}
      -c work_mem=${SQL_WORK_MEM:-4MB}
      -c effective_cache_size=${SQL_EFFECTIVE_CACHE_SIZE:-4GB}
volumes:
  postgres_data:
