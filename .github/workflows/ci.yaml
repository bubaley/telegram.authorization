name: CI

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "README.md"
      - "docs/**"
      - "*.md"
  pull_request:
    branches: ["main"]
    paths-ignore:
      - "README.md"
      - "docs/**"
      - "*.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  SECRET_KEY: test-secret-key
  ENCRYPTION_KEY: test-encryption-key
  SQL_HOST: postgres

jobs:
  lint-and-format:
    name: Code Quality & Linting
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install packages
        run: uv sync --dev --locked

      - name: Cache pre-commit hooks
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-
      - name: Install pre-commit hooks
        run: uv run pre-commit run --all-files --show-diff-on-failure

  test:
    name: Unit Tests & Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd="pg_isready"
          --health-interval=5s
          --health-timeout=5suv run aerich upgrade
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install packages
        run: uv sync --dev --locked

      - name: Show database url
        run: uv run python show_db.py

      - name: Run migrations
        run: uv run aerich upgrade

      # - name: Run tests with coverage
      #   run: |
      #     uv run coverage run manage.py test
      #     uv run coverage xml
      #     uv run coverage report
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v5
      #   if: always()
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files : ./coverage.xml
      #     flags: unittests
      #     name: codecov-umbrella
      #     fail_ci_if_error: false

  all-checks:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [lint-and-format, test]
    if: always()

    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.lint-and-format.result }}" != "success" ||
                "${{ needs.test.result }}" != "success" ]]; then
            echo "One or more checks failed"
            exit 1
          fi
          echo "All checks passed successfully"
